import React, {PureComponent} from 'react';
import {bindActionCreators} from 'redux';
import {connect} from 'react-redux';

import Page from '../../components/Page';
import CardList from '../../../components/CardList';
import PhotoCard from '../../../components/PhotoCard';
import { Link } from '../../../components/Button';
import Meta from '../../components/Meta';
import Top from './resources/Top';
import Categories from './resources/Categories';
import HowWork from './resources/HowWork';
import WhyMe from './resources/WhyMe';
import OurProduction from './resources/OurProduction';
import DataSection from '../../components/DataSection';
import FormBlock from '../../components/FormBlock';
import {getPhotos, resetData} from './actions';
import PropTypes from 'prop-types';
import styles from './Main.module.css';
import { Pages } from '@constructor-components';

const META = {
    title: '–ö—É–ø–∏—Ç—å –Ω–µ–¥–æ—Ä–æ–≥–∏–µ –±–∞–Ω–∏ –ø–æ–¥ –∫–ª—é—á –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è | –ë—Ä—É—Å –±–∞–Ω–∏',
    description: 'üè† –°—Ç—Ä–æ–∏–º –Ω–µ–¥–æ—Ä–æ–≥–∏–µ –±–∞–Ω–∏ –ø–æ–¥ –∫–ª—é—á –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏ üí® –ë–æ–ª–µ–µ 150 –ø—Ä–æ–µ–∫—Ç–æ–≤ –±–∞–Ω—å —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π 3 –≥–æ–¥–∞ üí® –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ üì≥ 8(800)201-07-29'
};

class Main extends PureComponent {
    static propTypes = {
        photos: PropTypes.array,
        actions: PropTypes.object
    };

    static initialAction({ dispatch }) {
        return [dispatch(getPhotos())];
    }

    componentDidMount() {
        const { actions, photos } = this.props;

        if (!photos) {
            actions.getPhotos();
        }
    }

    componentWillUnmount() {
        const { actions } = this.props;
        actions.resetData();
    }

    render() {
        const { photos } = this.props;

        return (
            <Page opacityHeader hasLinkToMain={false}>
                <Meta meta={META} />
                <Top />
                <Categories id='categories' />
                <HowWork />
                <WhyMe />
                {photos.length ? (
                    <DataSection
                        bgStyle='grey'
                        caption='–§–æ—Ç–æ–æ—Ç—á–µ—Ç—ã'
                        description='–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –º—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ —Ä–∞–∑–ª–∏—á–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏. –í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –≤–∏–¥–µ–æ–æ–±–∑–æ—Ä—ã, –æ—Ç–∑—ã–≤—ã –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤'
                        captionTag='h2'>
                        <CardList items={photos.map(photo => ({
                            id: photo._id,
                            element: (
                                <PhotoCard
                                    photo={photo}
                                    category={photo.projectId.categoryId}
                                    layout={photo.projectId.layoutId} />
                            )
                        }))} />
                        <div className={styles['button-container']}>
                            <Link href='/photos' caption='–°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ' />
                        </div>
                    </DataSection>
                ) : null}
                <DataSection
                    captionTag='h2'
                    bgStyle='white'
                    caption='–î–µ–ª–∏–º—Å—è –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º –æ–ø—ã—Ç–æ–º'
                    description='–û—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –Ω–∞—à–µ–º –æ–ø—ã—Ç–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–µ, –º—ã –≤–µ–¥–µ–º —Å–≤–æ–π –±–ª–æ–≥, –≤ –∫–æ—Ç–æ—Ä–æ–º –¥–µ–ª–∏–º—Å—è —Å –≤–∞–º–∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ –±–∞–Ω—å, –Ω–æ –∏ –æ –ø—Ä–∞–≤–∏–ª–∞—Ö —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏'>
                    <Pages
                        __pages__={this.props.pages}
                        __pageFolders__={this.props.pageFolders}
                        filter='index < 6'
                        folder='5f3afaae19c6b22d24b5d0a5'
                        paddingBottom='none'
                        paddingTop='none'
                        sort='page1[5242] > page2[5242] ? -1 : (page1[5242] === page2[5242] ? 0 : 1'
                    />
                    <div className={styles['button-container']}>
                        <Link href='/blog' caption='–ß–∏—Ç–∞—Ç—å –±–æ–ª—å—à–µ' />
                    </div>
                </DataSection>
                <OurProduction />
                <FormBlock source='–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞' />
            </Page>
        );
    }
}

function mapDispatchToProps(dispatch) {
    return {
        actions: bindActionCreators({
            getPhotos,
            resetData
        }, dispatch)
    };
}

function mapStateToProps(state) {
    const { photos } = state['client-main'];

    return { photos };
}

export default connect(mapStateToProps, mapDispatchToProps)(Main);
